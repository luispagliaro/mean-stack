angular.module("mean",["app.routes","authService","mainCtrl","userCtrl","userService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,r){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainController",controllerAs:"login"}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"userController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}),r.html5Mode(!0)}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","Auth",function(e,r,t){var n=this;n.loggedIn=t.checkLogin(),n.processing=!1,e.$on("$routeChangeStart",function(){n.loggedIn=t.checkLogin(),t.getUser().then(function(e){n.user=e.data})}),n.doLogin=function(){n.loginData=n.loginData||{},n.processing=!0,n.error="",t.login(n.loginData.username,n.loginData.password).success(function(e){n.processing=!1,e.success?r.path("/users"):n.error=e.message})},n.doLogout=function(){t.logout(),n.user="",r.path("/login")}}]),angular.module("userCtrl",["userService"]).controller("userController",["User",function(e){var r=this;r.processing=!0,e.getAll().success(function(e){r.processing=!1,r.users=e}),r.deleteUser=function(t){r.processing=!0,e["delete"](t).success(function(t){e.getAll().success(function(e){r.processing=!1,r.users=e})})}}]).controller("userCreateController",["User",function(e){var r=this;r.type="create",r.saveUser=function(){r.processing=!0,r.message="",e.create(r.userData).success(function(e){r.processing=!1,r.userData={},r.message=e.message})}}]).controller("userEditController",["$routeParams","User",function(e,r){var t=this;t.type="edit",r.get(e.user_id).success(function(e){t.userData=e}),t.saveUser=function(){t.processing=!0,t.message="",r.update(e.user_id,t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,r,t){var n={};return n.login=function(r,n){return e.post("/api/authenticate",{username:r,password:n}).success(function(e){return t.setToken(e.token),e})},n.logout=function(){t.setToken()},n.checkLogin=function(){return!!t.getToken()},n.getUser=function(){return t.getToken()?e.get("/api/me",{cache:!0}):r.reject({message:"User has no token."})},n}]).factory("AuthToken",["$window",function(e){var r={},t=e.localStorage;return r.getToken=function(){return t.getItem("token")},r.setToken=function(e){e?t.setItem("token",e):t.removeItem("token")},r}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,r,t){var n={};return n.request=function(e){var r=t.getToken();return r&&(e.headers["x-access-token"]=r),e},n.responseError=function(n){return 403===n.status&&(t.setToken(),r.path("/login")),e.reject(n)},n}]),angular.module("userService",[]).factory("User",["$http",function(e){var r={};return r.get=function(r){return e.get("/api/users/"+r)},r.getAll=function(){return e.get("/api/users/")},r.create=function(r){return e.post("/api/users/",r)},r.update=function(r,t){return e.put("/api/users/"+r,t)},r["delete"]=function(r,t){return e["delete"]("/api/users/"+r,t)},r}]);